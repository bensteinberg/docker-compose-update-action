name: 'Update docker-compose.yml'
description: 'Update image version in docker-compose.yml, build and push image'

inputs:
  rebuild-if-changed:
    description: 'List of files to hash'
    required: true
  image:
    description: 'Name of image in docker-compose.yml'
    required: true
  git-email:
    description: 'Git user email'
    required: true
  git-name:
    description: 'Git user name'
    required: true
    default: "Github Actions"
  registry:
    description: 'Server address of Docker registry'
    required: true
    default: "hub.docker.com"
  registry-user:
    description: 'User name for container registry'
    required: true
  registry-pass:
    description: 'Password for container registry'
    required: true
  working-directory:
    description: 'Working directory'
    required: true
    default: "."

outputs:
  image-tag:
    description: "Image and tag"
    value: ${{ steps.get-tag.outputs.tag }}
  updated:
    description: "Whether image needed to be built"
    value: ${{ steps.check-need-build.outputs.need-build }}

runs:
  using: "composite"
  steps:
    - name: Get current image and tag name
      id: get-tag
      working-directory: ${{ inputs.working-directory }}
      run: python ${{ github.action_path }}/get_tag.py ${{ inputs.image }} ${{ inputs.rebuild-if-changed }}

    - name: Update image tag in git
      if: github.event_name != 'pull_request'
      working-directory: ${{ inputs.working-directory }}
      run: |
        git config user.email "${{ inputs.git-email }}"
        git config user.name "${{ inputs.git-name }}"
        if [[ `git status docker-compose.yml --porcelain` ]] ; then
          git add docker-compose.yml
          git commit -m "Bump image version"
          git push origin develop
        fi

    - name: Check if we need to rebuild
      id: check-need-build
      run: |
        RETURN_CODE=`docker manifest inspect ${{ steps.get-tag.outputs.tag }} > /dev/null && echo $? || echo $?`
        echo "::set-output name=need-build::$RETURN_CODE"

    - name: Set up Docker Buildx
      if: steps.check-need-build.outputs.need-build == '1'
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to Container Registry
      if: github.event_name != 'pull_request' && steps.check-need-build.outputs.need-build == '1'
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.registry-user }}
        password: ${{ inputs.registry-pass }}

    - name: Build docker image and push
      if: github.event_name != 'pull_request' && steps.check-need-build.outputs.need-build == '1'
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.working-directory }}
        push: true
        tags: ${{ steps.get-tag.outputs.tag }}